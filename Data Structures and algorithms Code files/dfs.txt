void dfs(int sv,int adj[MAX][MAX],int visited[MAX],int n)
{
visited[sv]=1;
//stack[sv]=1;
printf("%d",sv);
for(int i=0;i<n;i++)
{
if(adj[sv][i] && !visted[i])
{ dfs(i,adj[MAX][MAX],visited,n);
	//stack[sv]=0;
	//toporder(*index)=i;
	//*index++;
 }
}
}
//then reverse the toporder array;
//pass the parent as -1

visited[sv]=1;
for(int i=0;i<n;i++)
{ 
if(adj[sv][i])
{	if(!visted[i])
	{ if(dfs(i,adj,visited,n,sv)) return 1; }
	else 
	{ if(i!=parent)  return 1; }
}
}
return 0;







